name: Notify Subscribers of New Post

on:
  push:
    branches:
      - main
    paths:
      - '_posts/**'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get new post details
        id: post_info
        run: |
          # Get the latest post file
          LATEST_POST=$(ls -t _posts/*.md _posts/*.markdown 2>/dev/null | head -1)
          
          if [ -z "$LATEST_POST" ]; then
            echo "No posts found"
            exit 0
          fi
          
          # Extract front matter
          POST_TITLE=$(grep -m 1 "^title:" "$LATEST_POST" | sed 's/title: *//;s/"//g;s/^\[//;s/\]$//')
          POST_DATE=$(grep -m 1 "^date:" "$LATEST_POST" | sed 's/date: *//')
          POST_DESCRIPTION=$(grep -m 1 "^description:" "$LATEST_POST" | sed 's/description: *//;s/"//g')
          POST_CITY=$(grep -m 1 "^city:" "$LATEST_POST" | sed 's/city: *//;s/"//g')
          POST_COUNTRY=$(grep -m 1 "^country:" "$LATEST_POST" | sed 's/country: *//;s/"//g')
          
          # Extract filename to build URL
          FILENAME=$(basename "$LATEST_POST")
          POST_SLUG=$(echo "$FILENAME" | sed 's/^[0-9]*-[0-9]*-[0-9]*-//;s/\.\(md\|markdown\)$//')
          POST_YEAR=$(echo "$FILENAME" | cut -d'-' -f1)
          POST_MONTH=$(echo "$FILENAME" | cut -d'-' -f2)
          POST_DAY=$(echo "$FILENAME" | cut -d'-' -f3)
          
          # Build post URL
          POST_URL="https://blog.juanpaulo.xyz/$POST_YEAR/$POST_MONTH/$POST_DAY/$POST_SLUG.html"
          
          # Output for next steps
          echo "title=$POST_TITLE" >> $GITHUB_OUTPUT
          echo "date=$POST_DATE" >> $GITHUB_OUTPUT
          echo "description=$POST_DESCRIPTION" >> $GITHUB_OUTPUT
          echo "url=$POST_URL" >> $GITHUB_OUTPUT
          echo "city=$POST_CITY" >> $GITHUB_OUTPUT
          echo "country=$POST_COUNTRY" >> $GITHUB_OUTPUT

      - name: Check if this is a new post
        id: check_new
        run: |
                    if git diff --name-status HEAD^ HEAD | grep -q "^A.*_posts/"; then
                    echo "is_new=true" >> $GITHUB_OUTPUT
                    echo "New post detected (file was added)"
                    sudo apt-get install -y pandoc
                    pandoc LATEST_POST -o output.html
                    fi

      - name: Get subscriber list from SendGrid
        if: steps.check_new.outputs.is_new == 'true'
        id: get_contacts
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_LIST_ID: ${{ secrets.SENDGRID_LIST_ID }}
        run: python3 scripts/get_contacts.py

      - name: Send emails via SendGrid
        if: steps.check_new.outputs.is_new == 'true'
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_NAME: ${{ secrets.SENDER_NAME }}
          SENDGRID_UNSUBSCRIBE_GROUP_ID: ${{ secrets.SENDGRID_UNSUBSCRIBE_GROUP_ID }}
          POST_TITLE: ${{ steps.post_info.outputs.title }}
          POST_DESCRIPTION: ${{ steps.post_info.outputs.description }}
          POST_URL: ${{ steps.post_info.outputs.url }}
          POST_CITY: ${{ steps.post_info.outputs.city }}
          POST_DATE: ${{ steps.post_info.outputs.date }}
        run: python3 send_emails.py
